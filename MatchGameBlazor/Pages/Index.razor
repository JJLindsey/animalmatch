@page "/"

<h1>Match the Animals</h1>

<style>
    .container {
        width: 400px;
    }

    button {
        width: 100px;
        height: 100px;
        font-size: 50px;
    }
</style>
<div class="container">
    <div class="row">
        @foreach (var animal in shuffledAnimals)
        {
            <div class="col-3">
                <button type="button" class="btn btn-outline-dark" @onclick="@(() => ButtonClick(animal))">
                    <h1>
                        @animal
                    </h1>
                </button>
            </div>
        }
    </div>
</div>
@code {
    List<string> animalEmoji = new List<string>()
    {
        "🐶", "🐶",
        "🐴", "🐴",
        "🐒", "🐒",
        "🐼", "🐼",
        "🦊", "🦊",
        "🦆", "🦆",
        "🐯", "🐯",
        "🐰", "🐰",
    };

    List<string> shuffledAnimals;

    protected override void OnInitialized()
    {
        SetUpGame();
    }
    private void SetUpGame()
    {
        Random random = new Random();
        shuffledAnimals = animalEmoji
            .OrderBy(item => random.Next())
            .ToList();
    }
    string lastAnimalFound = string.Empty;

    private void ButtonClick(string animal)
    {
        if (lastAnimalFound == string.Empty)
        {
            //first selection of pair
            lastAnimalFound = animal;
        }
        else if (lastAnimalFound == animal)
        {
            //match found. reset for next pair
            lastAnimalFound = string.Empty;
            //replace found animal with empty string 
            shuffledAnimals = shuffledAnimals
            .Select(a => a.Replace(animal, string.Empty))
            .ToList();
        }
        else {
            //user selected no match. then reset
            lastAnimalFound = string.Empty;
        }
    }
}